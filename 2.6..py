'''
6. * Реализовать структуру данных «Товары». Она должна представлять собой список кортежей.
Каждый кортеж хранит информацию об отдельном товаре. В кортеже должно быть два элемента — номер товара и словарь
 с параметрами (характеристиками товара: название, цена, количество, единица измерения).
 Структуру нужно сформировать программно, т.е. запрашивать все данные у пользователя.
Пример готовой структуры:
[
(1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
(2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}),
(3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})
]
Необходимо собрать аналитику о товарах. Реализовать словарь, в котором каждый ключ — характеристика товара,
например название, а значение — список значений-характеристик, например список названий товаров.
Пример:
{
“название”: [“компьютер”, “принтер”, “сканер”],
“цена”: [20000, 6000, 2000],
“количество”: [5, 2, 7],
“ед”: [“шт.”]
}
'''

products = []
index = 0
name_spec = input("Введите через пробел, какие характиристики товаров вы будете указывать: ").split()

while True:
    user_answer = input("Чтобы создать новый товар введите + \nЧтобы перейти к аналитике введите 'Q': ")
    if user_answer == '+':
        specifications = dict()
        for i in range(len(name_spec)):
            specifications.update({name_spec[i]: input(f"Введите {name_spec[i]} товара: ")})
    elif user_answer == 'Q':
        break
    index += 1
    new_product = (index, specifications)
    products.append(new_product)

analytics = {}
for product in products:
    for key, value in product[1].items():
        if key in analytics:
            analytics[key].append(value)
        else:
            analytics[key] = [value]

while True:
    user_answer = input(f"Чтобы закончить работу введите Q \n Введите характеристику товара, по которой вы хотите увидеть данные {name_spec}: ")
    if user_answer == 'Q':
        print("Работа окончена")
        break
    user_answer = user_answer.lower()
    print(user_answer, analytics.get(user_answer))
